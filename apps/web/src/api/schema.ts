/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/change-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Change user password
         * @description Change the current user's password by providing current and new password
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        currentPassword: string;
                        newPassword: string;
                    };
                };
            };
            responses: {
                /** @description Password changed successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                        };
                    };
                };
                /** @description Invalid request data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            code: string;
                        };
                    };
                };
                /** @description Current password is incorrect */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            code: string;
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            code: string;
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login with email and password */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Login with email and password */
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Login successful */
                200: {
                    headers: {
                        /** @description Session cookie */
                        "Set-Cookie"?: string;
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            user: {
                                id: string;
                                email: string;
                                name: string;
                                emailVerified: boolean;
                                image: string | null;
                            };
                            session: {
                                id: string;
                                expiresAt: string;
                            };
                        };
                    };
                };
                /** @description Invalid input */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            code: string;
                        };
                    };
                };
                /** @description Invalid credentials */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            code: string;
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            code: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Logout user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Logout successful */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                        };
                    };
                };
                /** @description Logout failed */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            code: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register with email and password */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email: string;
                        name?: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Registration successful */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            user: {
                                id: string;
                                email: string;
                                name: string;
                                emailVerified: boolean;
                                image: string | null;
                            };
                            session: {
                                id: string;
                                expiresAt: string;
                            };
                        };
                    };
                };
                /** @description Invalid input */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            code: string;
                        };
                    };
                };
                /** @description User already exists */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            code: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get current user information */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Current user information */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            email: string;
                            name: string;
                            emailVerified: boolean;
                            image: string | null;
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            code: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roadmaps": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get roadmap list with pagination and filtering */
        get: {
            parameters: {
                query?: {
                    /** @description Cursor for pagination (encoded string) */
                    cursor?: string;
                    /** @description Number of items to return */
                    limit?: number;
                    /** @description Search query for title or description */
                    search?: string;
                    /** @description Filter by roadmap status */
                    status?: "active" | "archived";
                    /** @description Sort field */
                    sort?: "created_at" | "updated_at" | "title";
                    /** @description Sort order */
                    order?: "asc" | "desc";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Roadmap list retrieved successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description List of roadmaps */
                            items: {
                                /**
                                 * @description Public ID of the roadmap
                                 * @example abc123def456
                                 */
                                id: string;
                                /**
                                 * @description Roadmap title
                                 * @example Full Stack JavaScript Developer
                                 */
                                title: string;
                                /**
                                 * @description Roadmap description
                                 * @example Complete guide to becoming a full stack developer
                                 */
                                description: string | null;
                                /**
                                 * @description Current status of the roadmap
                                 * @example active
                                 * @enum {string}
                                 */
                                status: "active" | "archived";
                                /**
                                 * @description Percentage of completed sub-goals (0-100)
                                 * @example 75
                                 */
                                goalCompletionPercent: number;
                                /**
                                 * @description Main learning topic
                                 * @example JavaScript
                                 */
                                learningTopic: string;
                                /**
                                 * @description Target user level
                                 * @example beginner
                                 */
                                userLevel: string;
                                /**
                                 * @description Target completion weeks
                                 * @example 12
                                 */
                                targetWeeks: number;
                                /**
                                 * @description Weekly study hours
                                 * @example 10
                                 */
                                weeklyHours: number;
                                /**
                                 * @description Preferred learning style
                                 * @example 실습 중심
                                 */
                                learningStyle: string;
                                /**
                                 * @description Preferred learning resources
                                 * @example 온라인 강의
                                 */
                                preferredResources: string;
                                /**
                                 * @description Main learning goal
                                 * @example 웹 개발자 취업
                                 */
                                mainGoal: string;
                                /**
                                 * @description Additional requirements
                                 * @example React, Node.js 포함
                                 */
                                additionalRequirements: string | null;
                                /**
                                 * @description Creation timestamp
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                                /**
                                 * @description Last update timestamp
                                 * @example 2024-01-15T10:30:00.000Z
                                 */
                                updatedAt: string;
                                /**
                                 * @description 현재 AI 노트 생성 상태
                                 * @example processing
                                 * @enum {string}
                                 */
                                aiNoteStatus: "idle" | "processing" | "ready" | "failed";
                                /**
                                 * @description AI가 생성한 학습 노트 (마크다운)
                                 * @example # 학습 개요
                                 *     - 목표 정리...
                                 */
                                aiNoteMarkdown: string | null;
                                /**
                                 * Format: date-time
                                 * @description AI 노트 생성을 요청한 시각
                                 * @example 2024-06-01T10:00:00.000Z
                                 */
                                aiNoteRequestedAt: string | null;
                                /**
                                 * Format: date-time
                                 * @description AI 노트 생성이 완료되거나 실패한 시각
                                 * @example 2024-06-01T10:05:12.000Z
                                 */
                                aiNoteCompletedAt: string | null;
                                /**
                                 * @description AI 노트 생성 실패 시 오류 메시지
                                 * @example Gemini API 호출이 실패했습니다.
                                 */
                                aiNoteError: string | null;
                            }[];
                            /** @description Pagination information */
                            pagination: {
                                /**
                                 * @description Whether there are more items
                                 * @example true
                                 */
                                hasNext: boolean;
                                /**
                                 * @description Cursor for the next page
                                 * @example eyJpZCI6MjAsImNyZWF0ZWRBdCI6IjIwMjQtMDEtMDIifQ==
                                 */
                                nextCursor: string | null;
                                /**
                                 * @description Total number of items (if available)
                                 * @example 150
                                 */
                                total: number;
                            };
                        };
                    };
                };
                /** @description Bad request - invalid parameters */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create a new roadmap */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description Roadmap title
                         * @example Full Stack JavaScript Developer
                         */
                        title: string;
                        /**
                         * @description Roadmap description
                         * @example Complete guide to becoming a full stack developer
                         */
                        description?: string;
                        /**
                         * @description Main learning topic
                         * @example JavaScript
                         */
                        learningTopic: string;
                        /**
                         * @description Target user level
                         * @example beginner
                         * @enum {string}
                         */
                        userLevel: "beginner" | "basic" | "intermediate" | "advanced" | "expert";
                        /**
                         * @description Target completion weeks (1-24)
                         * @example 12
                         */
                        targetWeeks: number;
                        /**
                         * @description Weekly study hours (1-60)
                         * @example 10
                         */
                        weeklyHours: number;
                        /**
                         * @description Preferred learning style
                         * @example 실습 중심
                         */
                        learningStyle: string;
                        /**
                         * @description Preferred learning resources
                         * @example 온라인 강의
                         */
                        preferredResources: string;
                        /**
                         * @description Main learning goal
                         * @example 웹 개발자 취업
                         */
                        mainGoal: string;
                        /**
                         * @description Additional requirements
                         * @example React, Node.js 포함
                         */
                        additionalRequirements?: string;
                    };
                };
            };
            responses: {
                /** @description Roadmap created successfully */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Public ID of the created roadmap
                             * @example abc123def456
                             */
                            id: string;
                            /**
                             * @description Roadmap title
                             * @example Full Stack JavaScript Developer
                             */
                            title: string;
                            /**
                             * @description Roadmap description
                             * @example Complete guide to becoming a full stack developer
                             */
                            description: string | null;
                            /**
                             * @description Current status of the roadmap
                             * @example active
                             * @enum {string}
                             */
                            status: "active" | "archived";
                            /**
                             * @description Main learning topic
                             * @example JavaScript
                             */
                            learningTopic: string;
                            /**
                             * @description Target user level
                             * @example beginner
                             */
                            userLevel: string;
                            /**
                             * @description Target completion weeks
                             * @example 12
                             */
                            targetWeeks: number;
                            /**
                             * @description Weekly study hours
                             * @example 10
                             */
                            weeklyHours: number;
                            /**
                             * @description Preferred learning style
                             * @example 실습 중심
                             */
                            learningStyle: string;
                            /**
                             * @description Preferred learning resources
                             * @example 온라인 강의
                             */
                            preferredResources: string;
                            /**
                             * @description Main learning goal
                             * @example 웹 개발자 취업
                             */
                            mainGoal: string;
                            /**
                             * @description Additional requirements
                             * @example React, Node.js 포함
                             */
                            additionalRequirements: string | null;
                            /**
                             * @description Creation timestamp
                             * @example 2024-01-01T00:00:00.000Z
                             */
                            createdAt: string;
                            /**
                             * @description Last update timestamp
                             * @example 2024-01-01T00:00:00.000Z
                             */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Bad request - validation failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roadmaps/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete a roadmap */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Roadmap deleted successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Deletion confirmation message
                             * @example Roadmap deleted successfully
                             */
                            message: string;
                            /**
                             * @description Public ID of the deleted roadmap
                             * @example abc123def456
                             */
                            deletedId: string;
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not the owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Roadmap not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Update a roadmap */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description Roadmap title
                         * @example Full Stack JavaScript Developer
                         */
                        title?: string;
                        /**
                         * @description Roadmap description
                         * @example Complete guide to becoming a full stack developer
                         */
                        description?: string;
                        /**
                         * @description Main learning topic
                         * @example JavaScript
                         */
                        learningTopic?: string;
                        /**
                         * @description Target user level
                         * @example beginner
                         * @enum {string}
                         */
                        userLevel?: "beginner" | "basic" | "intermediate" | "advanced" | "expert";
                        /**
                         * @description Target completion weeks (1-24)
                         * @example 12
                         */
                        targetWeeks?: number;
                        /**
                         * @description Weekly study hours (1-60)
                         * @example 10
                         */
                        weeklyHours?: number;
                        /**
                         * @description Preferred learning style
                         * @example 실습 중심
                         */
                        learningStyle?: string;
                        /**
                         * @description Preferred learning resources
                         * @example 온라인 강의
                         */
                        preferredResources?: string;
                        /**
                         * @description Main learning goal
                         * @example 웹 개발자 취업
                         */
                        mainGoal?: string;
                        /**
                         * @description Additional requirements
                         * @example React, Node.js 포함
                         */
                        additionalRequirements?: string;
                    };
                };
            };
            responses: {
                /** @description Roadmap updated successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Public ID of the roadmap
                             * @example abc123def456
                             */
                            id: string;
                            /**
                             * @description Roadmap title
                             * @example Full Stack JavaScript Developer
                             */
                            title: string;
                            /**
                             * @description Roadmap description
                             * @example Complete guide to becoming a full stack developer
                             */
                            description: string | null;
                            /**
                             * @description Current status of the roadmap
                             * @example active
                             * @enum {string}
                             */
                            status: "active" | "archived";
                            /**
                             * @description Percentage of completed sub-goals (0-100)
                             * @example 75
                             */
                            goalCompletionPercent: number;
                            /**
                             * @description Main learning topic
                             * @example JavaScript
                             */
                            learningTopic: string;
                            /**
                             * @description Target user level
                             * @example beginner
                             */
                            userLevel: string;
                            /**
                             * @description Target completion weeks
                             * @example 12
                             */
                            targetWeeks: number;
                            /**
                             * @description Weekly study hours
                             * @example 10
                             */
                            weeklyHours: number;
                            /**
                             * @description Preferred learning style
                             * @example 실습 중심
                             */
                            learningStyle: string;
                            /**
                             * @description Preferred learning resources
                             * @example 온라인 강의
                             */
                            preferredResources: string;
                            /**
                             * @description Main learning goal
                             * @example 웹 개발자 취업
                             */
                            mainGoal: string;
                            /**
                             * @description Additional requirements
                             * @example React, Node.js 포함
                             */
                            additionalRequirements: string | null;
                            /**
                             * @description Creation timestamp
                             * @example 2024-01-01T00:00:00.000Z
                             */
                            createdAt: string;
                            /**
                             * @description Last update timestamp
                             * @example 2024-01-15T10:30:00.000Z
                             */
                            updatedAt: string;
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            aiNoteStatus: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description AI가 생성한 학습 노트 (마크다운)
                             * @example # 학습 개요
                             *     - 목표 정리...
                             */
                            aiNoteMarkdown: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성을 요청한 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            aiNoteRequestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성이 완료되거나 실패한 시각
                             * @example 2024-06-01T10:05:12.000Z
                             */
                            aiNoteCompletedAt: string | null;
                            /**
                             * @description AI 노트 생성 실패 시 오류 메시지
                             * @example Gemini API 호출이 실패했습니다.
                             */
                            aiNoteError: string | null;
                        };
                    };
                };
                /** @description Bad request - validation failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not the owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Roadmap not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/roadmaps/{roadmapId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get detailed roadmap with goals and sub-goals */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Roadmap details retrieved successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Public ID of the roadmap
                             * @example abc123def456
                             */
                            id: string;
                            /**
                             * @description Roadmap title
                             * @example Full Stack JavaScript Developer
                             */
                            title: string;
                            /**
                             * @description Roadmap description
                             * @example Complete guide to becoming a full stack developer
                             */
                            description: string | null;
                            /**
                             * @description Current status of the roadmap
                             * @example active
                             * @enum {string}
                             */
                            status: "active" | "archived";
                            /**
                             * @description Main learning topic
                             * @example JavaScript
                             */
                            learningTopic: string;
                            /**
                             * @description Target user level
                             * @example beginner
                             */
                            userLevel: string;
                            /**
                             * @description Target completion weeks
                             * @example 12
                             */
                            targetWeeks: number;
                            /**
                             * @description Weekly study hours
                             * @example 10
                             */
                            weeklyHours: number;
                            /**
                             * @description Preferred learning style
                             * @example 실습 중심
                             */
                            learningStyle: string;
                            /**
                             * @description Preferred learning resources
                             * @example 온라인 강의
                             */
                            preferredResources: string;
                            /**
                             * @description Main learning goal
                             * @example 웹 개발자 취업
                             */
                            mainGoal: string;
                            /**
                             * @description Additional requirements
                             * @example React, Node.js 포함
                             */
                            additionalRequirements: string | null;
                            /**
                             * @description Creation timestamp
                             * @example 2024-01-01T00:00:00.000Z
                             */
                            createdAt: string;
                            /**
                             * @description Last update timestamp
                             * @example 2024-01-15T10:30:00.000Z
                             */
                            updatedAt: string;
                            /** @description List of goals with their sub-goals */
                            goals: {
                                /**
                                 * @description Public ID of the goal
                                 * @example 550e8400-e29b-41d4-a716-446655440000
                                 */
                                id: string;
                                /**
                                 * @description Goal title
                                 * @example Learn JavaScript Fundamentals
                                 */
                                title: string;
                                /**
                                 * @description Goal description
                                 * @example Master variables, functions, loops, and basic DOM manipulation
                                 */
                                description: string | null;
                                /**
                                 * @description Display order of the goal
                                 * @example 1
                                 */
                                order: number;
                                /**
                                 * @description Whether the goal is expanded in UI
                                 * @example true
                                 */
                                isExpanded: boolean;
                                /**
                                 * @description Creation timestamp
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                                /**
                                 * @description Last update timestamp
                                 * @example 2024-01-15T10:30:00.000Z
                                 */
                                updatedAt: string;
                                /** @description List of sub-goals under this goal */
                                subGoals: {
                                    /**
                                     * @description Public ID of the sub-goal
                                     * @example 660e8400-e29b-41d4-a716-446655440001
                                     */
                                    id: string;
                                    /**
                                     * @description Sub-goal title
                                     * @example Learn variables and data types
                                     */
                                    title: string;
                                    /**
                                     * @description Sub-goal description
                                     * @example Understand different data types: string, number, boolean, array, object
                                     */
                                    description: string | null;
                                    /**
                                     * @description Whether the sub-goal is completed
                                     * @example false
                                     */
                                    isCompleted: boolean;
                                    /**
                                     * Format: date-time
                                     * @description Timestamp when the sub-goal was marked as completed
                                     * @example 2024-02-15T09:30:00.000Z
                                     */
                                    completedAt: string | null;
                                    /**
                                     * @description Due date for the sub-goal
                                     * @example 2024-02-15T00:00:00.000Z
                                     */
                                    dueDate: string | null;
                                    /**
                                     * @description Personal memo for the sub-goal
                                     * @example Focus on practice with real examples
                                     */
                                    memo: string | null;
                                    /**
                                     * @description Display order of the sub-goal
                                     * @example 1
                                     */
                                    order: number;
                                    /**
                                     * @description Creation timestamp
                                     * @example 2024-01-01T00:00:00.000Z
                                     */
                                    createdAt: string;
                                    /**
                                     * @description Last update timestamp
                                     * @example 2024-01-15T10:30:00.000Z
                                     */
                                    updatedAt: string;
                                    /**
                                     * @description 현재 AI 노트 생성 상태
                                     * @example processing
                                     * @enum {string}
                                     */
                                    aiNoteStatus: "idle" | "processing" | "ready" | "failed";
                                    /**
                                     * @description AI가 생성한 학습 노트 (마크다운)
                                     * @example # 학습 개요
                                     *     - 목표 정리...
                                     */
                                    aiNoteMarkdown: string | null;
                                    /**
                                     * Format: date-time
                                     * @description AI 노트 생성을 요청한 시각
                                     * @example 2024-06-01T10:00:00.000Z
                                     */
                                    aiNoteRequestedAt: string | null;
                                    /**
                                     * Format: date-time
                                     * @description AI 노트 생성이 완료되거나 실패한 시각
                                     * @example 2024-06-01T10:05:12.000Z
                                     */
                                    aiNoteCompletedAt: string | null;
                                    /**
                                     * @description AI 노트 생성 실패 시 오류 메시지
                                     * @example Gemini API 호출이 실패했습니다.
                                     */
                                    aiNoteError: string | null;
                                }[];
                            }[];
                            /** @description List of documents associated with the roadmap */
                            documents: {
                                /**
                                 * @description Public ID of the document
                                 * @example 550e8400-e29b-41d4-a716-446655440000
                                 */
                                id: string;
                                /**
                                 * @description Original file name
                                 * @example learning-guide.pdf
                                 */
                                fileName: string;
                                /**
                                 * @description File size in bytes
                                 * @example 1048576
                                 */
                                fileSize: number;
                                /**
                                 * @description MIME type of the file
                                 * @example application/pdf
                                 */
                                fileType: string;
                                /**
                                 * @description Associated roadmap ID (null if not yet linked)
                                 * @example 123
                                 */
                                roadmapId: number | null;
                                /**
                                 * @description Upload timestamp
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                uploadedAt: string;
                                /**
                                 * @description Creation timestamp
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            }[];
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied to this roadmap */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Roadmap not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roadmaps/{id}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Change roadmap status (active/archived) */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description New status for the roadmap
                         * @example archived
                         * @enum {string}
                         */
                        status: "active" | "archived";
                    };
                };
            };
            responses: {
                /** @description Roadmap status changed successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Public ID of the roadmap
                             * @example abc123def456
                             */
                            id: string;
                            /**
                             * @description Updated status
                             * @example archived
                             * @enum {string}
                             */
                            status: "active" | "archived";
                            /**
                             * @description Last update timestamp
                             * @example 2024-01-15T10:30:00.000Z
                             */
                            updatedAt: string;
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            aiNoteStatus: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description AI가 생성한 학습 노트 (마크다운)
                             * @example # 학습 개요
                             *     - 목표 정리...
                             */
                            aiNoteMarkdown: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성을 요청한 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            aiNoteRequestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성이 완료되거나 실패한 시각
                             * @example 2024-06-01T10:05:12.000Z
                             */
                            aiNoteCompletedAt: string | null;
                            /**
                             * @description AI 노트 생성 실패 시 오류 메시지
                             * @example Gemini API 호출이 실패했습니다.
                             */
                            aiNoteError: string | null;
                        };
                    };
                };
                /** @description Bad request - validation failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not the owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Roadmap not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Roadmap already has the requested status */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/roadmaps/{roadmapId}/goals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a new goal for a roadmap */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description Goal title
                         * @example Learn JavaScript Fundamentals
                         */
                        title: string;
                        /**
                         * @description Goal description
                         * @example Master variables, functions, loops, and basic DOM manipulation
                         */
                        description?: string;
                        /**
                         * @description Whether the goal should be expanded by default
                         * @default true
                         * @example true
                         */
                        isExpanded?: boolean;
                    };
                };
            };
            responses: {
                /** @description Goal created successfully */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Public ID of the goal
                             * @example 550e8400-e29b-41d4-a716-446655440000
                             */
                            id: string;
                            /**
                             * @description Goal title
                             * @example Learn JavaScript Fundamentals
                             */
                            title: string;
                            /**
                             * @description Goal description
                             * @example Master variables, functions, loops, and basic DOM manipulation
                             */
                            description: string | null;
                            /**
                             * @description Display order of the goal
                             * @example 1
                             */
                            order: number;
                            /**
                             * @description Whether the goal is expanded in UI
                             * @example true
                             */
                            isExpanded: boolean;
                            /**
                             * @description Creation timestamp
                             * @example 2024-01-01T00:00:00.000Z
                             */
                            createdAt: string;
                            /**
                             * @description Last update timestamp
                             * @example 2024-01-15T10:30:00.000Z
                             */
                            updatedAt: string;
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            aiNoteStatus: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description AI가 생성한 학습 노트 (마크다운)
                             * @example # 학습 개요
                             *     - 목표 정리...
                             */
                            aiNoteMarkdown: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성을 요청한 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            aiNoteRequestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성이 완료되거나 실패한 시각
                             * @example 2024-06-01T10:05:12.000Z
                             */
                            aiNoteCompletedAt: string | null;
                            /**
                             * @description AI 노트 생성 실패 시 오류 메시지
                             * @example Gemini API 호출이 실패했습니다.
                             */
                            aiNoteError: string | null;
                        };
                    };
                };
                /** @description Bad request - validation failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not roadmap owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Roadmap not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roadmaps/{roadmapId}/goals/{goalId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update a goal */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                    /** @description Public ID of the goal */
                    goalId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description Goal title
                         * @example Learn JavaScript Fundamentals
                         */
                        title?: string;
                        /**
                         * @description Goal description
                         * @example Master variables, functions, loops, and basic DOM manipulation
                         */
                        description?: string;
                        /**
                         * @description Whether the goal is expanded in UI
                         * @example true
                         */
                        isExpanded?: boolean;
                    };
                };
            };
            responses: {
                /** @description Goal updated successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Public ID of the goal
                             * @example 550e8400-e29b-41d4-a716-446655440000
                             */
                            id: string;
                            /**
                             * @description Goal title
                             * @example Learn JavaScript Fundamentals
                             */
                            title: string;
                            /**
                             * @description Goal description
                             * @example Master variables, functions, loops, and basic DOM manipulation
                             */
                            description: string | null;
                            /**
                             * @description Display order of the goal
                             * @example 1
                             */
                            order: number;
                            /**
                             * @description Whether the goal is expanded in UI
                             * @example true
                             */
                            isExpanded: boolean;
                            /**
                             * @description Creation timestamp
                             * @example 2024-01-01T00:00:00.000Z
                             */
                            createdAt: string;
                            /**
                             * @description Last update timestamp
                             * @example 2024-01-15T10:30:00.000Z
                             */
                            updatedAt: string;
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            aiNoteStatus: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description AI가 생성한 학습 노트 (마크다운)
                             * @example # 학습 개요
                             *     - 목표 정리...
                             */
                            aiNoteMarkdown: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성을 요청한 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            aiNoteRequestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성이 완료되거나 실패한 시각
                             * @example 2024-06-01T10:05:12.000Z
                             */
                            aiNoteCompletedAt: string | null;
                            /**
                             * @description AI 노트 생성 실패 시 오류 메시지
                             * @example Gemini API 호출이 실패했습니다.
                             */
                            aiNoteError: string | null;
                        };
                    };
                };
                /** @description Bad request - validation failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not roadmap owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Goal or roadmap not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        post?: never;
        /** Delete a goal */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                    /** @description Public ID of the goal */
                    goalId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Goal deleted successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Deletion confirmation message
                             * @example Goal deleted successfully
                             */
                            message: string;
                            /**
                             * @description Public ID of the deleted goal
                             * @example 550e8400-e29b-41d4-a716-446655440000
                             */
                            deletedId: string;
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not roadmap owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Goal or roadmap not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roadmaps/{roadmapId}/goals/{goalId}/order": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Reorder a goal position */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                    /** @description Public ID of the goal */
                    goalId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description New order position for the goal (1-based)
                         * @example 3
                         */
                        newOrder: number;
                    };
                };
            };
            responses: {
                /** @description Goal reordered successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Public ID of the reordered goal
                             * @example 550e8400-e29b-41d4-a716-446655440000
                             */
                            id: string;
                            /**
                             * @description Updated order position
                             * @example 3
                             */
                            order: number;
                            /**
                             * @description Last update timestamp
                             * @example 2024-01-15T10:30:00.000Z
                             */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Bad request - invalid order position */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not roadmap owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Goal or roadmap not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/roadmaps/{roadmapId}/goals/{goalId}/sub-goals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a new sub-goal for a goal */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                    /** @description Public ID of the goal */
                    goalId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description Sub-goal title
                         * @example Learn variables and data types
                         */
                        title: string;
                        /**
                         * @description Sub-goal description
                         * @example Understand different data types: string, number, boolean, array, object
                         */
                        description?: string;
                        /**
                         * Format: date-time
                         * @description Due date for the sub-goal (ISO 8601 format)
                         * @example 2024-02-15T00:00:00.000Z
                         */
                        dueDate?: string;
                        /**
                         * @description Personal memo for the sub-goal
                         * @example Focus on practice with real examples
                         */
                        memo?: string;
                    };
                };
            };
            responses: {
                /** @description Sub-goal created successfully */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Public ID of the sub-goal
                             * @example 660e8400-e29b-41d4-a716-446655440001
                             */
                            id: string;
                            /**
                             * @description Sub-goal title
                             * @example Learn variables and data types
                             */
                            title: string;
                            /**
                             * @description Sub-goal description
                             * @example Understand different data types: string, number, boolean, array, object
                             */
                            description: string | null;
                            /**
                             * @description Whether the sub-goal is completed
                             * @example false
                             */
                            isCompleted: boolean;
                            /**
                             * Format: date-time
                             * @description Timestamp when the sub-goal was marked as completed
                             * @example 2024-02-15T09:30:00.000Z
                             */
                            completedAt: string | null;
                            /**
                             * @description Due date for the sub-goal
                             * @example 2024-02-15T00:00:00.000Z
                             */
                            dueDate: string | null;
                            /**
                             * @description Personal memo for the sub-goal
                             * @example Focus on practice with real examples
                             */
                            memo: string | null;
                            /**
                             * @description Display order of the sub-goal
                             * @example 1
                             */
                            order: number;
                            /**
                             * @description Creation timestamp
                             * @example 2024-01-01T00:00:00.000Z
                             */
                            createdAt: string;
                            /**
                             * @description Last update timestamp
                             * @example 2024-01-15T10:30:00.000Z
                             */
                            updatedAt: string;
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            aiNoteStatus: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description AI가 생성한 학습 노트 (마크다운)
                             * @example # 학습 개요
                             *     - 목표 정리...
                             */
                            aiNoteMarkdown: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성을 요청한 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            aiNoteRequestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성이 완료되거나 실패한 시각
                             * @example 2024-06-01T10:05:12.000Z
                             */
                            aiNoteCompletedAt: string | null;
                            /**
                             * @description AI 노트 생성 실패 시 오류 메시지
                             * @example Gemini API 호출이 실패했습니다.
                             */
                            aiNoteError: string | null;
                        };
                    };
                };
                /** @description Bad request - validation failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not roadmap owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Roadmap or goal not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roadmaps/{roadmapId}/sub-goals/{subGoalId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get detailed information about a sub-goal */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                    /** @description Public ID of the sub-goal */
                    subGoalId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Sub-goal detail retrieved successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Public ID of the sub-goal
                             * @example 660e8400-e29b-41d4-a716-446655440001
                             */
                            id: string;
                            /**
                             * @description Sub-goal title
                             * @example Learn variables and data types
                             */
                            title: string;
                            /**
                             * @description Sub-goal description
                             * @example Understand different data types: string, number, boolean, array, object
                             */
                            description: string | null;
                            /**
                             * @description Whether the sub-goal is completed
                             * @example false
                             */
                            isCompleted: boolean;
                            /**
                             * Format: date-time
                             * @description Timestamp when the sub-goal was marked as completed
                             * @example 2024-02-15T09:30:00.000Z
                             */
                            completedAt: string | null;
                            /**
                             * @description Due date for the sub-goal
                             * @example 2024-02-15T00:00:00.000Z
                             */
                            dueDate: string | null;
                            /**
                             * @description Personal memo for the sub-goal
                             * @example Focus on practice with real examples
                             */
                            memo: string | null;
                            /**
                             * @description Display order of the sub-goal
                             * @example 1
                             */
                            order: number;
                            /**
                             * @description Creation timestamp
                             * @example 2024-01-01T00:00:00.000Z
                             */
                            createdAt: string;
                            /**
                             * @description Last update timestamp
                             * @example 2024-01-15T10:30:00.000Z
                             */
                            updatedAt: string;
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            aiNoteStatus: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description AI가 생성한 학습 노트 (마크다운)
                             * @example # 학습 개요
                             *     - 목표 정리...
                             */
                            aiNoteMarkdown: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성을 요청한 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            aiNoteRequestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성이 완료되거나 실패한 시각
                             * @example 2024-06-01T10:05:12.000Z
                             */
                            aiNoteCompletedAt: string | null;
                            /**
                             * @description AI 노트 생성 실패 시 오류 메시지
                             * @example Gemini API 호출이 실패했습니다.
                             */
                            aiNoteError: string | null;
                            /** @description Parent goal metadata */
                            goal: {
                                /**
                                 * @description Public ID of the parent goal
                                 * @example 550e8400-e29b-41d4-a716-446655440000
                                 */
                                id: string;
                                /**
                                 * @description Title of the parent goal
                                 * @example Master JavaScript fundamentals
                                 */
                                title: string;
                                /**
                                 * @description Description of the parent goal
                                 * @example Focus on core JavaScript knowledge before diving into frameworks
                                 */
                                description: string | null;
                                /**
                                 * @description Display order of the goal
                                 * @example 1
                                 */
                                order: number;
                            };
                            /** @description Parent roadmap metadata */
                            roadmap: {
                                /**
                                 * @description Public ID of the roadmap
                                 * @example abc123def456
                                 */
                                id: string;
                                /**
                                 * @description Title of the roadmap
                                 * @example Full-stack Development Roadmap
                                 */
                                title: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not roadmap owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Roadmap, goal, or sub-goal not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        /** Update a sub-goal */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                    /** @description Public ID of the sub-goal */
                    subGoalId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description Sub-goal title
                         * @example Learn variables and data types
                         */
                        title?: string;
                        /**
                         * @description Sub-goal description
                         * @example Understand different data types: string, number, boolean, array, object
                         */
                        description?: string;
                        /**
                         * @description Whether the sub-goal is completed
                         * @example true
                         */
                        isCompleted?: boolean;
                        /**
                         * Format: date-time
                         * @description Due date for the sub-goal (ISO 8601 format)
                         * @example 2024-02-15T00:00:00.000Z
                         */
                        dueDate?: string | null;
                        /**
                         * @description Personal memo for the sub-goal
                         * @example Focus on practice with real examples
                         */
                        memo?: string;
                    };
                };
            };
            responses: {
                /** @description Sub-goal updated successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Public ID of the sub-goal
                             * @example 660e8400-e29b-41d4-a716-446655440001
                             */
                            id: string;
                            /**
                             * @description Sub-goal title
                             * @example Learn variables and data types
                             */
                            title: string;
                            /**
                             * @description Sub-goal description
                             * @example Understand different data types: string, number, boolean, array, object
                             */
                            description: string | null;
                            /**
                             * @description Whether the sub-goal is completed
                             * @example false
                             */
                            isCompleted: boolean;
                            /**
                             * Format: date-time
                             * @description Timestamp when the sub-goal was marked as completed
                             * @example 2024-02-15T09:30:00.000Z
                             */
                            completedAt: string | null;
                            /**
                             * @description Due date for the sub-goal
                             * @example 2024-02-15T00:00:00.000Z
                             */
                            dueDate: string | null;
                            /**
                             * @description Personal memo for the sub-goal
                             * @example Focus on practice with real examples
                             */
                            memo: string | null;
                            /**
                             * @description Display order of the sub-goal
                             * @example 1
                             */
                            order: number;
                            /**
                             * @description Creation timestamp
                             * @example 2024-01-01T00:00:00.000Z
                             */
                            createdAt: string;
                            /**
                             * @description Last update timestamp
                             * @example 2024-01-15T10:30:00.000Z
                             */
                            updatedAt: string;
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            aiNoteStatus: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description AI가 생성한 학습 노트 (마크다운)
                             * @example # 학습 개요
                             *     - 목표 정리...
                             */
                            aiNoteMarkdown: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성을 요청한 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            aiNoteRequestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description AI 노트 생성이 완료되거나 실패한 시각
                             * @example 2024-06-01T10:05:12.000Z
                             */
                            aiNoteCompletedAt: string | null;
                            /**
                             * @description AI 노트 생성 실패 시 오류 메시지
                             * @example Gemini API 호출이 실패했습니다.
                             */
                            aiNoteError: string | null;
                        };
                    };
                };
                /** @description Bad request - validation failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not roadmap owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Roadmap, goal, or sub-goal not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roadmaps/{roadmapId}/goals/{goalId}/sub-goals/{subGoalId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete a sub-goal */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                    /** @description Public ID of the sub-goal */
                    subGoalId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Sub-goal deleted successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Deletion confirmation message
                             * @example Sub-goal deleted successfully
                             */
                            message: string;
                            /**
                             * @description Public ID of the deleted sub-goal
                             * @example 660e8400-e29b-41d4-a716-446655440001
                             */
                            deletedId: string;
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not roadmap owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Roadmap, goal, or sub-goal not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roadmaps/{roadmapId}/goals/{goalId}/sub-goals/{subGoalId}/move": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Move a sub-goal to another goal or reorder within the same goal */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Public ID of the roadmap */
                    roadmapId: string;
                    /** @description Public ID of the sub-goal */
                    subGoalId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description Public ID of the target goal to move sub-goal to
                         * @example 550e8400-e29b-41d4-a716-446655440000
                         */
                        newGoalId: string;
                        /**
                         * @description New order position for the sub-goal (1-based). If not provided, will be placed at the end.
                         * @example 2
                         */
                        newOrder?: number;
                    };
                };
            };
            responses: {
                /** @description Sub-goal moved successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Public ID of the moved sub-goal
                             * @example 660e8400-e29b-41d4-a716-446655440001
                             */
                            id: string;
                            /**
                             * @description Public ID of the goal the sub-goal was moved to
                             * @example 550e8400-e29b-41d4-a716-446655440000
                             */
                            goalId: string;
                            /**
                             * @description Updated order position
                             * @example 2
                             */
                            order: number;
                            /**
                             * @description Last update timestamp
                             * @example 2024-01-15T10:30:00.000Z
                             */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Bad request - validation failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied - not roadmap owner */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Roadmap, goal, or sub-goal not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description Error code
                                 * @example roadmap:invalid_pagination_cursor
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Invalid pagination cursor provided
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/progress/daily": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get daily goal activity (due & completed) */
        get: {
            parameters: {
                query?: {
                    /** @description 조회 시작 날짜 (YYYY-MM-DD) */
                    start?: string;
                    /** @description 조회 종료 날짜 (YYYY-MM-DD) */
                    end?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Daily goal activity retrieved successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description 조회 범위 (포함) */
                            range: {
                                /**
                                 * @description 응답 데이터의 시작 날짜
                                 * @example 2024-05-01
                                 */
                                start: string;
                                /**
                                 * @description 응답 데이터의 종료 날짜
                                 * @example 2024-05-31
                                 */
                                end: string;
                            };
                            /** @description 날짜별 활동 목록 */
                            items: {
                                /**
                                 * @description 활동이 기록된 날짜 (YYYY-MM-DD)
                                 * @example 2024-05-12
                                 */
                                date: string;
                                /** @description 해당 날짜에 마감일이 도래한 세부 목표 */
                                due: {
                                    /**
                                     * @description 로드맵 공개 ID (16자 NanoID)
                                     * @example abcdEfghijklmnop
                                     */
                                    roadmapId: string;
                                    /**
                                     * @description 로드맵 제목
                                     * @example 프론트엔드 전환 로드맵
                                     */
                                    roadmapTitle: string;
                                    /**
                                     * Format: uuid
                                     * @description 목표 공개 ID (UUID)
                                     * @example 30aa53ce-93e7-4f90-9f69-6c4de2fb1c5d
                                     */
                                    goalId: string;
                                    /**
                                     * @description 목표 제목
                                     * @example React 기본기 다지기
                                     */
                                    goalTitle: string;
                                    /**
                                     * Format: uuid
                                     * @description 세부 목표 공개 ID (UUID)
                                     * @example f28c26fa-40f8-4f56-9fba-9b8f3d3e2ea7
                                     */
                                    subGoalId: string;
                                    /**
                                     * @description 세부 목표 제목
                                     * @example Hooks 패턴 정리하기
                                     */
                                    subGoalTitle: string;
                                    /**
                                     * Format: date-time
                                     * @description 세부 목표 마감일 (ISO 8601)
                                     * @example 2024-05-12T00:00:00.000Z
                                     */
                                    dueDate: string;
                                }[];
                                /** @description 해당 날짜에 완료된 세부 목표 */
                                completed: {
                                    /**
                                     * @description 로드맵 공개 ID (16자 NanoID)
                                     * @example abcdEfghijklmnop
                                     */
                                    roadmapId: string;
                                    /**
                                     * @description 로드맵 제목
                                     * @example 프론트엔드 전환 로드맵
                                     */
                                    roadmapTitle: string;
                                    /**
                                     * Format: uuid
                                     * @description 목표 공개 ID (UUID)
                                     * @example 30aa53ce-93e7-4f90-9f69-6c4de2fb1c5d
                                     */
                                    goalId: string;
                                    /**
                                     * @description 목표 제목
                                     * @example React 기본기 다지기
                                     */
                                    goalTitle: string;
                                    /**
                                     * Format: uuid
                                     * @description 세부 목표 공개 ID (UUID)
                                     * @example f28c26fa-40f8-4f56-9fba-9b8f3d3e2ea7
                                     */
                                    subGoalId: string;
                                    /**
                                     * @description 세부 목표 제목
                                     * @example Hooks 패턴 정리하기
                                     */
                                    subGoalTitle: string;
                                    /**
                                     * Format: date-time
                                     * @description 세부 목표 완료 시각 (ISO 8601)
                                     * @example 2024-05-14T10:23:45.000Z
                                     */
                                    completedAt: string;
                                }[];
                            }[];
                        };
                    };
                };
                /** @description Invalid date range or format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description 에러 코드
                                 * @example progress:invalid_date_range
                                 */
                                code: string;
                                /**
                                 * @description 에러 메시지
                                 * @example 시작 날짜는 종료 날짜보다 늦을 수 없습니다.
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description 에러 코드
                                 * @example progress:invalid_date_range
                                 */
                                code: string;
                                /**
                                 * @description 에러 메시지
                                 * @example 시작 날짜는 종료 날짜보다 늦을 수 없습니다.
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description 에러 코드
                                 * @example progress:invalid_date_range
                                 */
                                code: string;
                                /**
                                 * @description 에러 메시지
                                 * @example 시작 날짜는 종료 날짜보다 늦을 수 없습니다.
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ai/roadmaps/generate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Generate a personalized learning roadmap using AI */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description 학습하고자 하는 주제
                         * @example JavaScript 풀스택 개발
                         */
                        learningTopic: string;
                        /**
                         * @description 현재 사용자의 수준
                         * @example 초보자
                         * @enum {string}
                         */
                        userLevel: "초보자" | "기초" | "중급" | "고급" | "전문가";
                        /**
                         * @description 목표 학습 기간 (주)
                         * @example 12
                         */
                        targetWeeks: number;
                        /**
                         * @description 주당 학습 시간
                         * @example 10
                         */
                        weeklyHours: number;
                        /**
                         * @description 선호하는 학습 스타일
                         * @example 실습 중심
                         * @enum {string}
                         */
                        learningStyle: "시각적 학습" | "실습 중심" | "문서 읽기" | "동영상 강의" | "대화형 학습" | "프로젝트 기반";
                        /**
                         * @description 선호하는 학습 자료
                         * @example 온라인 강의
                         * @enum {string}
                         */
                        preferredResources: "온라인 강의" | "책/전자책" | "튜토리얼" | "유튜브 영상" | "공식 문서" | "실습 사이트";
                        /**
                         * @description 주요 학습 목표
                         * @example 취업을 위한 실무 능력 습득
                         */
                        mainGoal: string;
                        /**
                         * @description 추가 요구사항
                         * @example React 중심으로 학습하고 싶습니다
                         */
                        additionalRequirements?: string;
                        /**
                         * @description 업로드된 PDF 문서의 Public ID
                         * @example 550e8400-e29b-41d4-a716-446655440000
                         */
                        documentId?: string;
                    };
                };
            };
            responses: {
                /** @description Roadmap generated successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            roadmap: {
                                /**
                                 * @description 로드맵 공개 ID
                                 * @example abc123def456ghi7
                                 */
                                id: string;
                                /**
                                 * @description 로드맵 제목
                                 * @example JavaScript 풀스택 개발자 로드맵
                                 */
                                title: string;
                                /**
                                 * @description 로드맵 설명
                                 * @example 12주 만에 JavaScript 풀스택 개발자가 되기 위한 체계적인 학습 계획
                                 */
                                description: string | null;
                                /**
                                 * @description 로드맵 상태
                                 * @example active
                                 */
                                status: string;
                                /**
                                 * @description 학습 주제
                                 * @example JavaScript 풀스택 개발
                                 */
                                learningTopic: string;
                                /**
                                 * @description 사용자 수준
                                 * @example 초보자
                                 */
                                userLevel: string;
                                /**
                                 * @description 목표 기간 (주)
                                 * @example 12
                                 */
                                targetWeeks: number;
                                /**
                                 * @description 주당 학습 시간
                                 * @example 10
                                 */
                                weeklyHours: number;
                                /**
                                 * @description 학습 스타일
                                 * @example 실습 중심
                                 */
                                learningStyle: string;
                                /**
                                 * @description 선호 자료
                                 * @example 온라인 강의
                                 */
                                preferredResources: string;
                                /**
                                 * @description 주요 목표
                                 * @example 취업을 위한 실무 능력 습득
                                 */
                                mainGoal: string;
                                /**
                                 * @description 추가 요구사항
                                 * @example React 중심으로 학습하고 싶습니다
                                 */
                                additionalRequirements?: string;
                                /** @description 상위 목표들 */
                                goals: {
                                    /**
                                     * @description 상위 목표 ID
                                     * @example x1y2z3a4b5c6d7e8
                                     */
                                    id: string;
                                    /**
                                     * @description 상위 목표 제목
                                     * @example HTML/CSS 기초
                                     */
                                    title: string;
                                    /**
                                     * @description 상위 목표 설명
                                     * @example 웹 개발의 기본이 되는 HTML과 CSS를 학습합니다
                                     */
                                    description: string | null;
                                    /**
                                     * @description 상위 목표 순서
                                     * @example 1
                                     */
                                    order: number;
                                    /**
                                     * @description 펼침 여부
                                     * @example true
                                     */
                                    isExpanded: boolean;
                                    /** @description 하위 목표들 */
                                    subGoals: {
                                        /**
                                         * @description 하위 목표 ID
                                         * @example a1b2c3d4e5f6g7h8
                                         */
                                        id: string;
                                        /**
                                         * @description 하위 목표 제목
                                         * @example HTML 기본 태그 학습
                                         */
                                        title: string;
                                        /**
                                         * @description 하위 목표 설명
                                         * @example div, span, p, h1-h6 등 기본 HTML 태그들의 용도와 사용법을 익힙니다
                                         */
                                        description: string | null;
                                        /**
                                         * @description 하위 목표 순서
                                         * @example 1
                                         */
                                        order: number;
                                        /**
                                         * @description 완료 여부
                                         * @example false
                                         */
                                        isCompleted: boolean;
                                        /**
                                         * Format: date-time
                                         * @description 마감일
                                         * @example 2024-12-31T00:00:00Z
                                         */
                                        dueDate?: string | null;
                                        /**
                                         * @description 메모
                                         * @example 추가 학습 자료 참고
                                         */
                                        memo?: string | null;
                                    }[];
                                }[];
                                /**
                                 * Format: date-time
                                 * @description 생성일
                                 * @example 2024-01-01T00:00:00Z
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description 수정일
                                 * @example 2024-01-01T00:00:00Z
                                 */
                                updatedAt: string;
                            };
                            /**
                             * @description 생성 완료 메시지
                             * @example 로드맵이 성공적으로 생성되었습니다.
                             */
                            message: string;
                        };
                    };
                };
                /** @description Bad request - validation failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description 에러 코드
                                 * @example ai:generation_failed
                                 */
                                code: string;
                                /**
                                 * @description 에러 메시지
                                 * @example 로드맵 생성에 실패했습니다.
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description 에러 코드
                                 * @example ai:generation_failed
                                 */
                                code: string;
                                /**
                                 * @description 에러 메시지
                                 * @example 로드맵 생성에 실패했습니다.
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Rate limit exceeded */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description 에러 코드
                                 * @example ai:generation_failed
                                 */
                                code: string;
                                /**
                                 * @description 에러 메시지
                                 * @example 로드맵 생성에 실패했습니다.
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                /**
                                 * @description 에러 코드
                                 * @example ai:generation_failed
                                 */
                                code: string;
                                /**
                                 * @description 에러 메시지
                                 * @example 로드맵 생성에 실패했습니다.
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ai/roadmaps/{roadmapId}/sub-goals/{subGoalId}/notes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Generate or refresh AI learning note for a sub-goal */
        post: {
            parameters: {
                query?: {
                    /** @description 기존 노트가 있더라도 재생성을 강제로 요청합니다 */
                    force?: boolean | null;
                };
                header?: never;
                path: {
                    /** @description 로드맵 공개 ID */
                    roadmapId: string;
                    /** @description 세부 목표 공개 ID */
                    subGoalId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Existing note status returned */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            status: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description 생성된 마크다운 노트. 생성 중이거나 실패 시 null
                             * @example null
                             */
                            markdown: string | null;
                            /**
                             * Format: date-time
                             * @description 가장 최근 노트 생성 요청 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            requestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description 생성 완료 혹은 실패가 기록된 시각
                             * @example 2024-06-01T10:02:30.000Z
                             */
                            completedAt: string | null;
                            /**
                             * @description 실패 시 사용자에게 노출 가능한 오류 메시지
                             * @example Gemini 호출이 실패했습니다. 잠시 후 다시 시도해주세요.
                             */
                            errorMessage: string | null;
                        };
                    };
                };
                /** @description Note generation started */
                202: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            status: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description 생성된 마크다운 노트. 생성 중이거나 실패 시 null
                             * @example null
                             */
                            markdown: string | null;
                            /**
                             * Format: date-time
                             * @description 가장 최근 노트 생성 요청 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            requestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description 생성 완료 혹은 실패가 기록된 시각
                             * @example 2024-06-01T10:02:30.000Z
                             */
                            completedAt: string | null;
                            /**
                             * @description 실패 시 사용자에게 노출 가능한 오류 메시지
                             * @example Gemini 호출이 실패했습니다. 잠시 후 다시 시도해주세요.
                             */
                            errorMessage: string | null;
                        };
                    };
                };
                /** @description Invalid request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            status: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description 생성된 마크다운 노트. 생성 중이거나 실패 시 null
                             * @example null
                             */
                            markdown: string | null;
                            /**
                             * Format: date-time
                             * @description 가장 최근 노트 생성 요청 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            requestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description 생성 완료 혹은 실패가 기록된 시각
                             * @example 2024-06-01T10:02:30.000Z
                             */
                            completedAt: string | null;
                            /**
                             * @description 실패 시 사용자에게 노출 가능한 오류 메시지
                             * @example Gemini 호출이 실패했습니다. 잠시 후 다시 시도해주세요.
                             */
                            errorMessage: string | null;
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            status: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description 생성된 마크다운 노트. 생성 중이거나 실패 시 null
                             * @example null
                             */
                            markdown: string | null;
                            /**
                             * Format: date-time
                             * @description 가장 최근 노트 생성 요청 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            requestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description 생성 완료 혹은 실패가 기록된 시각
                             * @example 2024-06-01T10:02:30.000Z
                             */
                            completedAt: string | null;
                            /**
                             * @description 실패 시 사용자에게 노출 가능한 오류 메시지
                             * @example Gemini 호출이 실패했습니다. 잠시 후 다시 시도해주세요.
                             */
                            errorMessage: string | null;
                        };
                    };
                };
                /** @description Access denied */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            status: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description 생성된 마크다운 노트. 생성 중이거나 실패 시 null
                             * @example null
                             */
                            markdown: string | null;
                            /**
                             * Format: date-time
                             * @description 가장 최근 노트 생성 요청 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            requestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description 생성 완료 혹은 실패가 기록된 시각
                             * @example 2024-06-01T10:02:30.000Z
                             */
                            completedAt: string | null;
                            /**
                             * @description 실패 시 사용자에게 노출 가능한 오류 메시지
                             * @example Gemini 호출이 실패했습니다. 잠시 후 다시 시도해주세요.
                             */
                            errorMessage: string | null;
                        };
                    };
                };
                /** @description Target roadmap or sub-goal not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            status: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description 생성된 마크다운 노트. 생성 중이거나 실패 시 null
                             * @example null
                             */
                            markdown: string | null;
                            /**
                             * Format: date-time
                             * @description 가장 최근 노트 생성 요청 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            requestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description 생성 완료 혹은 실패가 기록된 시각
                             * @example 2024-06-01T10:02:30.000Z
                             */
                            completedAt: string | null;
                            /**
                             * @description 실패 시 사용자에게 노출 가능한 오류 메시지
                             * @example Gemini 호출이 실패했습니다. 잠시 후 다시 시도해주세요.
                             */
                            errorMessage: string | null;
                        };
                    };
                };
                /** @description Server error while generating the note */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 현재 AI 노트 생성 상태
                             * @example processing
                             * @enum {string}
                             */
                            status: "idle" | "processing" | "ready" | "failed";
                            /**
                             * @description 생성된 마크다운 노트. 생성 중이거나 실패 시 null
                             * @example null
                             */
                            markdown: string | null;
                            /**
                             * Format: date-time
                             * @description 가장 최근 노트 생성 요청 시각
                             * @example 2024-06-01T10:00:00.000Z
                             */
                            requestedAt: string | null;
                            /**
                             * Format: date-time
                             * @description 생성 완료 혹은 실패가 기록된 시각
                             * @example 2024-06-01T10:02:30.000Z
                             */
                            completedAt: string | null;
                            /**
                             * @description 실패 시 사용자에게 노출 가능한 오류 메시지
                             * @example Gemini 호출이 실패했습니다. 잠시 후 다시 시도해주세요.
                             */
                            errorMessage: string | null;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/documents/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Upload a PDF document
         * @description Upload a PDF file to R2 storage. The file will be validated and text extraction will begin in the background.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "multipart/form-data": {
                        /**
                         * Format: binary
                         * @description PDF file to upload (max 10MB)
                         */
                        file: string;
                    };
                };
            };
            responses: {
                /** @description Document uploaded successfully */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Upload success status
                             * @example true
                             */
                            success: boolean;
                            /** @description Uploaded document information */
                            document: {
                                /**
                                 * @description Public ID of the document
                                 * @example 550e8400-e29b-41d4-a716-446655440000
                                 */
                                id: string;
                                /**
                                 * @description Original file name
                                 * @example learning-guide.pdf
                                 */
                                fileName: string;
                                /**
                                 * @description File size in bytes
                                 * @example 1048576
                                 */
                                fileSize: number;
                                /**
                                 * @description MIME type of the file
                                 * @example application/pdf
                                 */
                                fileType: string;
                                /**
                                 * @description Public URL to access the file
                                 * @example https://pub-xxx.r2.dev/pdfs/user123/1234567890-uuid.pdf
                                 */
                                storageUrl: string;
                                /**
                                 * @description Associated roadmap ID (null if not yet linked)
                                 * @example 123
                                 */
                                roadmapId: number | null;
                                /**
                                 * @description Upload timestamp
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                uploadedAt: string;
                                /**
                                 * @description Creation timestamp
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                        };
                    };
                };
                /** @description Bad request - invalid file */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Request success status
                             * @example false
                             */
                            success: boolean;
                            error: {
                                /**
                                 * @description Error code
                                 * @example document:invalid_file_type
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Only PDF files are allowed
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Request success status
                             * @example false
                             */
                            success: boolean;
                            error: {
                                /**
                                 * @description Error code
                                 * @example document:invalid_file_type
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Only PDF files are allowed
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Request success status
                             * @example false
                             */
                            success: boolean;
                            error: {
                                /**
                                 * @description Error code
                                 * @example document:invalid_file_type
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Only PDF files are allowed
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/documents/{publicId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get document details
         * @description Retrieve detailed information about a specific document
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Document public ID */
                    publicId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Document retrieved successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            document: {
                                /**
                                 * @description Public ID of the document
                                 * @example 550e8400-e29b-41d4-a716-446655440000
                                 */
                                id: string;
                                /**
                                 * @description Original file name
                                 * @example learning-guide.pdf
                                 */
                                fileName: string;
                                /**
                                 * @description File size in bytes
                                 * @example 1048576
                                 */
                                fileSize: number;
                                /**
                                 * @description MIME type of the file
                                 * @example application/pdf
                                 */
                                fileType: string;
                                /**
                                 * @description Public URL to access the file
                                 * @example https://pub-xxx.r2.dev/pdfs/user123/1234567890-uuid.pdf
                                 */
                                storageUrl: string;
                                /**
                                 * @description Associated roadmap ID (null if not yet linked)
                                 * @example 123
                                 */
                                roadmapId: number | null;
                                /**
                                 * @description Upload timestamp
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                uploadedAt: string;
                                /**
                                 * @description Creation timestamp
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                        };
                    };
                };
                /** @description Authentication required */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Request success status
                             * @example false
                             */
                            success: boolean;
                            error: {
                                /**
                                 * @description Error code
                                 * @example document:invalid_file_type
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Only PDF files are allowed
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Access denied */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Request success status
                             * @example false
                             */
                            success: boolean;
                            error: {
                                /**
                                 * @description Error code
                                 * @example document:invalid_file_type
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Only PDF files are allowed
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Document not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Request success status
                             * @example false
                             */
                            success: boolean;
                            error: {
                                /**
                                 * @description Error code
                                 * @example document:invalid_file_type
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Only PDF files are allowed
                                 */
                                message: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Request success status
                             * @example false
                             */
                            success: boolean;
                            error: {
                                /**
                                 * @description Error code
                                 * @example document:invalid_file_type
                                 */
                                code: string;
                                /**
                                 * @description Error message
                                 * @example Only PDF files are allowed
                                 */
                                message: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
